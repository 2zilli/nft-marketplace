/*
Entity representing a favorite NFT.
*/
entity favorite_nft {
    key pubkey: byte_array;  // Public key of the user.
    key nft_id: integer;  // Identifier of the NFT.

    index pubkey;  // Index to query favorite NFTs by user.
    index nft_id;  // Index to query favorite NFTs by NFT ID.
}

/*
Entity representing a favorite collection.
*/
entity favorite_collection {
    key pubkey: byte_array;  // Public key of the user.
    key collection_id: integer;  // Identifier of the collection.

    index pubkey;  // Index to query favorite collections by user.
    index collection_id;  // Index to query favorite collections by collection ID.
}

/*
Operation to add an NFT to favorites.
Params:
- nft_id: integer - Identifier of the NFT to be added to favorites.
*/
operation add_nft_to_favorites(nft_id: integer) {
    // Get the public key of the first signer.
    val signers = op_context.get_signers();
    require(signers.size() > 0, "No signers found");
    val pubkey = signers[0];

    // Ensure the user is registered.
    require(registered_user @ ? { .pubkey == pubkey } != null, "User is not registered");

    // Check if the NFT exists.
    require(nft @ ? { .nft_id == nft_id } ( .nft_id ) != null, "NFT not found!");

    // Here, the fee for adding to favorites would be deducted from the user's balance.

    // Add NFT to favorites.
    create favorite_nft(pubkey = pubkey, nft_id = nft_id);
}

/*
Operation to remove an NFT from favorites.
Params:
- nft_id: integer - Identifier of the NFT to be removed from favorites.
*/
operation remove_nft_from_favorites(nft_id: integer) {
    // Get the public key of the first signer.
    val signers = op_context.get_signers();
    require(signers.size() > 0, "No signers found");
    val pubkey = signers[0];

    // Ensure the user is registered.
    require(registered_user @ ? { .pubkey == pubkey } != null, "User is not registered");

    // Remove NFT from favorites.
    delete favorite_nft @ { .pubkey == pubkey, .nft_id == nft_id };
}

/*
Operation to add a collection to favorites.
Params:
- collection_id: integer - Identifier of the collection to be added to favorites.
*/
operation add_collection_to_favorites(collection_id: integer) {
    // Get the public key of the first signer.
    val signers = op_context.get_signers();
    require(signers.size() > 0, "No signers found");
    val pubkey = signers[0];

    // Ensure the user is registered.
    require(registered_user @ ? { .pubkey == pubkey } != null, "User is not registered");

    // Check if the collection exists.
    require(nft_collection @ ? { .collection_id == collection_id } ( .collection_id ) != null, "Collection not found!");

    // Here, the fee for adding to favorites would be deducted from the user's balance.

    // Add collection to favorites.
    create favorite_collection(pubkey = pubkey, collection_id = collection_id);
}

/*
Operation to remove a collection from favorites.
Params:
- collection_id: integer - Identifier of the collection to be removed from favorites.
*/
operation remove_collection_from_favorites(collection_id: integer) {
    // Get the public key of the first signer.
    val signers = op_context.get_signers();
    require(signers.size() > 0, "No signers found");
    val pubkey = signers[0];

    // Ensure the user is registered.
    require(registered_user @ ? { .pubkey == pubkey } != null, "User is not registered");

    // Remove collection from favorites.
    delete favorite_collection @ { .pubkey == pubkey, .collection_id == collection_id };
}